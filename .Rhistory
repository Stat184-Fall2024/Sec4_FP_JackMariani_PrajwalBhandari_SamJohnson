total_votes = X2,
r_votes = X3,
r_percent = X4,
r_ev = X5,
d_votes = X6,
d_percent = X7,
d_ev = X8,
other_votes = X9,
other_percent = X10,
other_ev = X11,
year = year
)
return(table)
}
view(clean_84_88(1984))
view(clean_84_88(1984))
# clean the data from 1984, 88
clean_84_88 <- function(y){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/",y)
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:10)) %>%
slice(-(52:n()))
table <- table[, (1:11)] %>%
mutate(
X5 = ifelse(X5 == "", '0', X5), # replace blanks with 0
X8 = ifelse(X8 == "", '0', X8),
X11 = ifelse(X11 == "",'0', X11),
# convert character cols to numeric by using readr::parse_number
X2 = readr::parse_number(X2),
X3 = readr::parse_number(X3),
X6 = readr::parse_number(X6),
X5 = readr::parse_number(X5),
X8 = readr::parse_number(X8),
X4 = readr::parse_number(gsub("%", "", X4)),
X7 = readr::parse_number(gsub("%", "", X7)),
X9 = X2 - X3 - X6, # other votes = total - d - r
X11 = 0, #third parties don't get any Electoral Votes
year = y # add year col
) %>%
mutate(
X10 = 100 - X4 - X7 #mutate again for percentage, can use X4 and X7 since they are numeric
)
rename(
state = X1,
total_votes = X2,
r_votes = X3,
r_percent = X4,
r_ev = X5,
d_votes = X6,
d_percent = X7,
d_ev = X8,
other_votes = X9,
other_percent = X10,
other_ev = X11,
year = year
)
return(table)
}
view(clean_84_88(1984))
# clean the data from 1984, 88
clean_84_88 <- function(y){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/",y)
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:10)) %>%
slice(-(52:n()))
table <- table[, (1:11)] %>%
mutate(
X5 = ifelse(X5 == "", '0', X5), # replace blanks with 0
X8 = ifelse(X8 == "", '0', X8),
X11 = ifelse(X11 == "",'0', X11),
# convert character cols to numeric by using readr::parse_number
X2 = readr::parse_number(X2),
X3 = readr::parse_number(X3),
X6 = readr::parse_number(X6),
X5 = readr::parse_number(X5),
X8 = readr::parse_number(X8),
X4 = readr::parse_number(gsub("%", "", X4)),
X7 = readr::parse_number(gsub("%", "", X7)),
X9 = X2 - X3 - X6, # other votes = total - d - r
X11 = 0, #third parties don't get any Electoral Votes
year = y # add year col
) %>%
mutate(
X10 = 100 - X4 - X7 #mutate again for percentage, can use X4 and X7 since they are numeric
) %>%
rename(
state = X1,
total_votes = X2,
r_votes = X3,
r_percent = X4,
r_ev = X5,
d_votes = X6,
d_percent = X7,
d_ev = X8,
other_votes = X9,
other_percent = X10,
other_ev = X11,
year = year
)
return(table)
}
# clean the data from 1984, 88
clean_84_88 <- function(y){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/",y)
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:10)) %>%
slice(-(52:n()))
table <- table[, (1:11)] %>%
mutate(
X5 = ifelse(X5 == "", '0', X5), # replace blanks with 0
X8 = ifelse(X8 == "", '0', X8),
X11 = ifelse(X11 == "",'0', X11),
# convert character cols to numeric by using readr::parse_number
X2 = readr::parse_number(X2),
X3 = readr::parse_number(X3),
X6 = readr::parse_number(X6),
X5 = readr::parse_number(X5),
X8 = readr::parse_number(X8),
X4 = readr::parse_number(gsub("%", "", X4)),
X7 = readr::parse_number(gsub("%", "", X7)),
X9 = X2 - X3 - X6, # other votes = total - d - r
X11 = 0, #third parties don't get any Electoral Votes
year = y # add year col
) %>%
mutate(
X10 = 100 - X4 - X7 #mutate again for percentage, can use X4 and X7 since they are numeric
) %>%
rename(
state = X1,
total_votes = X2,
r_votes = X3,
r_percent = X4,
r_ev = X5,
d_votes = X6,
d_percent = X7,
d_ev = X8,
other_votes = X9,
other_percent = X10,
other_ev = X11,
year = year
)
return(table)
}
view(clean_84_88(1984))
# clean the data from 1984, 88
clean_84_88 <- function(y){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/",y)
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:10)) %>%
slice(-(52:n()))
table <- table[, (1:11)] %>%
mutate(
X5 = ifelse(X5 == "", '0', X5), # replace blanks with 0
X8 = ifelse(X8 == "", '0', X8),
X11 = ifelse(X11 == "",'0', X11),
# convert character cols to numeric by using readr::parse_number
X2 = readr::parse_number(X2),
X3 = readr::parse_number(X3),
X6 = readr::parse_number(X6),
X5 = readr::parse_number(X5),
X8 = readr::parse_number(X8),
X4 = readr::parse_number(gsub("%", "", X4)),
X7 = readr::parse_number(gsub("%", "", X7)),
X9 = X2 - X3 - X6, # other votes = total - d - r
X11 = 0, #third parties don't get any Electoral Votes
year = y # add year col
) %>%
mutate(
X10 = 100 - X4 - X7 #mutate again for percentage, can use X4 and X7 since they are numeric
) %>%
rename(
state = X1,
total_votes = X2,
r_votes = X3,
r_percent = X4,
r_ev = X5,
d_votes = X6,
d_percent = X7,
d_ev = X8,
other_votes = X9,
other_percent = X10,
other_ev = X11,
year = year
) %>% # rearrange the order of cols
select(
year, state, total_votes,
d_votes, d_percent, d_ev,
r_votes, r_percent, r_ev,
other_votes, other_percent, other_ev
)
return(table)
}
view(clean_84_88(1984))
view(clean_84_88(1988))
# clean the data from 1984, 88
clean_84_88 <- function(y){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/",y)
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:10)) %>%
slice(-(52:n()))
table <- table[, (1:11)] %>%
mutate(
X5 = ifelse(X5 == "", '0', X5), # replace blanks with 0
X8 = ifelse(X8 == "", '0', X8),
X11 = ifelse(X11 == "",'0', X11),
# convert character cols to numeric by using readr::parse_number
X2 = readr::parse_number(X2),
X3 = readr::parse_number(X3),
X6 = readr::parse_number(X6),
X5 = readr::parse_number(X5),
X8 = readr::parse_number(X8),
X4 = readr::parse_number(gsub("%", "", X4)),
X7 = readr::parse_number(gsub("%", "", X7)),
X9 = X2 - X3 - X6, # other votes = total - d - r
X11 = 0, #third parties don't get any Electoral Votes
year = y # add year col
) %>%
mutate(
X10 = 100 - X4 - X7 #mutate again for percentage, can use X4 and X7 since they are numeric
) %>%
rename(
state = X1,
total_votes = X2,
r_votes = X3,
r_percent = X4,
r_ev = X5,
d_votes = X6,
d_percent = X7,
d_ev = X8,
other_votes = X9,
other_percent = X10,
other_ev = X11,
year = year
) %>% # rearrange the order of cols
select(
year, state, total_votes,
d_votes, d_percent, d_ev,
r_votes, r_percent, r_ev,
other_votes, other_percent, other_ev
)
if (y == 1988) {
table[49,12] <- 1 # a faithless elector gave a vote to Lloyd Bernstein
table[49,2] <- "West Virginia"
}
return(table)
}
view(clean_84_88(1988))
# clean the data from 2000
clean_2000 <- function(){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/2000")
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:10))
return(table)
}
view(clean_2000)
view(clean_2000())
# clean the data from 2000
clean_2000 <- function(){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/2000")
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:9))
return(table)
}
view(clean_2000())
# clean the data from 2000
clean_2000 <- function(){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/2000")
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:9)) %>%
slice(-(52:n()))
return(table)
}
# clean the data from 2000
clean_2000 <- function(){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/2000")
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:9)) %>%
slice(-(52:n()))
return(table)
}
view(clean_2000())
# clean the data from 2000
clean_2000 <- function(){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/2000")
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:9)) %>%
slice(-(52:n()))
table <- table[, (1:11)] %>%
mutate(
X5 = ifelse(X5 == "", '0', X5), # replace blanks with 0
X8 = ifelse(X8 == "", '0', X8),
X11 = ifelse(X11 == "",'0', X11),
# convert character cols to numeric by using readr::parse_number
X2 = readr::parse_number(X2),
X3 = readr::parse_number(X3),
X6 = readr::parse_number(X6),
X5 = readr::parse_number(X5),
X8 = readr::parse_number(X8),
X9 = readr::parse_number(X2 - X3 - X6), # other votes = total - d - r
X11 = 0, #third parties dont get any Electoral Votes
X4 = readr::parse_number(gsub("%", "", X4)),
X7 = readr::parse_number(gsub("%", "", X7)),
year = y # add year col
)
return(table)
}
view(clean_2000())
# clean the data from 2000
clean_2000 <- function(){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/2000")
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:9)) %>%
slice(-(52:n()))
table <- table[, (1:11)] %>%
mutate(
X5 = ifelse(X5 == "", '0', X5), # replace blanks with 0
X8 = ifelse(X8 == "", '0', X8),
X11 = ifelse(X11 == "",'0', X11),
# convert character cols to numeric by using readr::parse_number
X2 = readr::parse_number(X2),
X3 = readr::parse_number(X3),
X6 = readr::parse_number(X6),
X5 = readr::parse_number(X5),
X8 = readr::parse_number(X8),
X9 = X2 - X3 - X6, # other votes = total - d - r
X11 = 0, #third parties dont get any Electoral Votes
X4 = readr::parse_number(gsub("%", "", X4)),
X7 = readr::parse_number(gsub("%", "", X7)),
year = y # add year col
)
return(table)
}
view(clean_2000())
# clean the data from 2000
clean_2000 <- function(){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/2000")
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:9)) %>%
slice(-(52:n()))
table <- table[, (1:11)] %>%
mutate(
X5 = ifelse(X5 == "", '0', X5), # replace blanks with 0
X8 = ifelse(X8 == "", '0', X8),
X11 = ifelse(X11 == "",'0', X11),
# convert character cols to numeric by using readr::parse_number
X2 = readr::parse_number(X2),
X3 = readr::parse_number(X3),
X6 = readr::parse_number(X6),
X5 = readr::parse_number(X5),
X8 = readr::parse_number(X8),
X9 = X2 - X3 - X6, # other votes = total - d - r
X11 = 0, #third parties dont get any Electoral Votes
X4 = readr::parse_number(gsub("%", "", X4)),
X7 = readr::parse_number(gsub("%", "", X7)),
year = 2000 # add year col
)
return(table)
}
view(clean_2000())
# clean the data from 2000
clean_2000 <- function(){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/2000")
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:9)) %>%
slice(-(52:n()))
table <- table[, (1:11)] %>%
mutate(
X5 = ifelse(X5 == "", '0', X5), # replace blanks with 0
X8 = ifelse(X8 == "", '0', X8),
X11 = ifelse(X11 == "",'0', X11),
# convert character cols to numeric by using readr::parse_number
X2 = readr::parse_number(X2),
X3 = readr::parse_number(X3),
X6 = readr::parse_number(X6),
X5 = readr::parse_number(X5),
X8 = readr::parse_number(X8),
X9 = X2 - X3 - X6, # other votes = total - d - r
X11 = 0, #third parties dont get any Electoral Votes
X4 = readr::parse_number(gsub("%", "", X4)),
X7 = readr::parse_number(gsub("%", "", X7)),
year = 2000 # add year col
)
table[9,1] <- 'Dist. of Col.' #account for asterisk. We mention this in the report
return(table)
}
view(clean_2000())
# clean the data from 2000
clean_2000 <- function(){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/2000")
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:9)) %>%
slice(-(52:n()))
table <- table[, (1:11)] %>%
mutate(
X5 = ifelse(X5 == "", '0', X5), # replace blanks with 0
X8 = ifelse(X8 == "", '0', X8),
X11 = ifelse(X11 == "",'0', X11),
# convert character cols to numeric by using readr::parse_number
X2 = readr::parse_number(X2),
X3 = readr::parse_number(X3),
X6 = readr::parse_number(X6),
X5 = readr::parse_number(X5),
X8 = readr::parse_number(X8),
X9 = X2 - X3 - X6, # other votes = total - d - r
X11 = 0, #third parties dont get any Electoral Votes
X4 = readr::parse_number(gsub("%", "", X4)),
X7 = readr::parse_number(gsub("%", "", X7)),
year = 2000 # add year col
) %>%
rename(
state = X1,
total_votes = X2,
r_votes = X3,
r_percent = X4,
r_ev = X5,
d_votes = X6,
d_percent = X7,
d_ev = X8,
other_votes = X9,
other_percent = X10,
other_ev = X11,
year = year
) %>% # rearrange the order of cols
select(
year, state, total_votes,
d_votes, d_percent, d_ev,
r_votes, r_percent, r_ev,
other_votes, other_percent, other_ev
)
table[9,1] <- 'Dist. of Col.' #account for asterisk. We mention this in the report
return(table)
}
view(clean_2000())
# clean the data from 2000
clean_2000 <- function(){
str <-  paste0("https://www.presidency.ucsb.edu/statistics/elections/2000")
table <- read_html(str) %>%
html_element(css = 'table') %>%
html_table() %>%
slice(-(1:9)) %>%
slice(-(52:n()))
table <- table[, (1:11)] %>%
mutate(
X5 = ifelse(X5 == "", '0', X5), # replace blanks with 0
X8 = ifelse(X8 == "", '0', X8),
X11 = ifelse(X11 == "",'0', X11),
# convert character cols to numeric by using readr::parse_number
X2 = readr::parse_number(X2),
X3 = readr::parse_number(X3),
X6 = readr::parse_number(X6),
X5 = readr::parse_number(X5),
X8 = readr::parse_number(X8),
X9 = X2 - X3 - X6, # other votes = total - d - r
X11 = 0, #third parties dont get any Electoral Votes
X4 = readr::parse_number(gsub("%", "", X4)),
X7 = readr::parse_number(gsub("%", "", X7)),
year = 2000 # add year col
) %>%
rename(
state = X1,
total_votes = X2,
r_votes = X3,
r_percent = X4,
r_ev = X5,
d_votes = X6,
d_percent = X7,
d_ev = X8,
other_votes = X9,
other_percent = X10,
other_ev = X11,
year = year
) %>% # rearrange the order of cols
select(
year, state, total_votes,
d_votes, d_percent, d_ev,
r_votes, r_percent, r_ev,
other_votes, other_percent, other_ev
)
table[9,2] <- 'Dist. of Col.' #account for asterisk. We mention this in the report
return(table)
}
view(clean_2000())
View(table_2008)
View(table_2004)
